{"version":3,"file":"ngx-phone-mask.es5.js","sources":["~/ngx-phone-mask/ngx-phone-mask/ngx-phone-mask.ts","~/ngx-phone-mask/ngx-phone-mask/src/app/ngx-phone-mask/ngx-phone-mask.module.ts","~/ngx-phone-mask/ngx-phone-mask/src/app/ngx-phone-mask/ngx-phone-mask.directive.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {NgxPhoneMaskModule} from './public_api';\n\nexport {NgxPhoneMaskDirective as Éµa} from './src/app/ngx-phone-mask/ngx-phone-mask.directive';","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgxPhoneMaskDirective } from './ngx-phone-mask.directive';\nexport class NgxPhoneMaskModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  \timports: [\n\t\tCommonModule\n\t],\n\tdeclarations: [NgxPhoneMaskDirective],\n\texports: [NgxPhoneMaskDirective]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NgxPhoneMaskModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNgxPhoneMaskModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgxPhoneMaskModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, ViewChild, ElementRef, Input, forwardRef, Directive, HostListener  } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nconst /** @type {?} */ noop = () => { };\n\nconst /** @type {?} */ masks = [\n\t'1',\n\t'1 (1',\n\t'1 (11',\n\t'1 (111',\n\t'1 (111) 1',\n\t'1 (111) 11',\n\t'1 (111) 11-1',\n\t'1 (111) 11-11',\n\t'1 (111) 11-111',\n\t'1 (111) 111-111',\n\t'1 (111) 111-11-11',\n\t'1 (111) 111-111-11'\n];\n\nconst /** @type {?} */ clean = (number) => {\n\treturn number\n\t\t.toString()\n\t\t.replace(/[^\\d\\^]/gm, '');\n}\n\nconst /** @type {?} */ format = (number) => {\n\tlet /** @type {?} */ lastCharIndex = 0;\n\tconst /** @type {?} */ cleanValue = clean(number);\n\tconst /** @type {?} */ charCount = cleanValue.replace(/\\^/gm, '').length;\n\tif (charCount === 0) {\n\t\treturn {\n\t\t\tformatted: '',\n\t\t\tcursorPosition: 0\n\t\t};\n\t}\n\tconst /** @type {?} */ mask = masks[charCount - 1];\n\tif (charCount > 1 && !mask) {\n\t\treturn null;\n\t}\n\tlet /** @type {?} */ cursorPosition;\n\tconst /** @type {?} */ formatted = mask.split('').map((c, i) => {\n\t\tif (c === '1') {\n\t\t\tif (cleanValue[lastCharIndex] == '^') {\n\t\t\t\tcursorPosition = i + 1;\n\t\t\t\tlastCharIndex++;\n\t\t\t}\n\n\t\t\tlastCharIndex++;\n\t\t\treturn cleanValue[lastCharIndex - 1];\n\t\t} else {\n\t\t\treturn c;\n\t\t}\n\t}).join('');\n\n\tif (!cursorPosition) {\n\t\tcursorPosition = formatted.length;\n\t}\n\n\tcursorPosition++; // because of '+'\n\n\treturn {\n\t\tformatted: `+${formatted}`,\n\t\tcursorPosition\n\t}\n}\nexport class NgxPhoneMaskDirective {\nprivate onTouchedCallback: () => void = noop;\nprivate onChangeCallback: (_: any) => void = noop;\npublic valueType: 'clean' | 'full' = 'clean';\npublic showMask: boolean = true;\npublic disabled;\nprivate _value;\nprivate oldValue = '';\n/**\n * @param {?} input\n */\nconstructor(private input: ElementRef) {\n\t}\n/**\n * @return {?}\n */\nupdateInputView() {\n\t\tconst /** @type {?} */ input = this.input.nativeElement;\n\t\tconst /** @type {?} */ cursorPosition = input.selectionStart;\n\t\tconst /** @type {?} */ value = this._value;\n\t\tconst /** @type {?} */ valueWithCursor = value.substring(0, cursorPosition) + '^' + value.substring(cursorPosition);\n\n\t\tconst /** @type {?} */ formatted = format(valueWithCursor);\n\n\n\t\tif (!formatted) {\n\t\t\tinput.value = this.oldValue;\n\t\t\treturn;\n\t\t}\n\n\t\tconst /** @type {?} */ newValue = formatted.formatted;\n\t\tif (newValue != input.value) {\n\t\t\tinput.value = newValue;\n\t\t\tinput.setSelectionRange(formatted.cursorPosition, formatted.cursorPosition);\n\t\t}\n\t\tthis.oldValue = newValue;\n\t\tthis.emitValue(newValue);\n\t}\n/**\n * @param {?} v\n * @return {?}\n */\nemitValue(v) {\n\t\tlet /** @type {?} */ value;\n\t\tswitch(this.valueType) {\n\t\t\tcase 'clean':\n\t\t\t\tvalue = v.replace(/[^\\d\\+]/gm, '');\n\t\t\t\tbreak;\n\t\t\tcase 'full':\n\t\t\t\tvalue = v;\n\t\t\t\tbreak;\n\t\t}\n\t\tthis.onChangeCallback(value);\n\t}\n/**\n * @return {?}\n */\nonInput() {\n\t\tthis._value = this.input.nativeElement.value;\n\t\tthis.updateInputView();\n\t}\n/**\n * @param {?} v\n * @return {?}\n */\nset value(v) {\n\t\tlet /** @type {?} */ value = v ? v : '';\n\t\tthis._value = value;\n\t\tthis.updateInputView();\n\t}\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: any) {\n\t\tthis.value = value;\n\t}\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: any) {\n\t\tthis.onChangeCallback = fn;\n\t}\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: any) {\n\t\tthis.onTouchedCallback = fn;\n\t}\n/**\n * @param {?} isDisabled\n * @return {?}\n */\nsetDisabledState(isDisabled) {\n\t\tthis.disabled = isDisabled;\n\t}\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n\tselector: '[ngxPhoneMask]',\n\tproviders: [\n\t\t{\n\t\t\tprovide: NG_VALUE_ACCESSOR,\n\t\t\tuseExisting: forwardRef(() => NgxPhoneMaskDirective),\n\t\t\tmulti: true\n\t\t}\n\t]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'valueType': [{ type: Input },],\n'showMask': [{ type: Input },],\n'onInput': [{ type: HostListener, args: ['input', ] },],\n};\n}\n\nfunction NgxPhoneMaskDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nNgxPhoneMaskDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgxPhoneMaskDirective.ctorParameters;\n/** @type {?} */\nNgxPhoneMaskDirective.propDecorators;\n/** @type {?} */\nNgxPhoneMaskDirective.prototype.onTouchedCallback;\n/** @type {?} */\nNgxPhoneMaskDirective.prototype.onChangeCallback;\n/** @type {?} */\nNgxPhoneMaskDirective.prototype.valueType;\n/** @type {?} */\nNgxPhoneMaskDirective.prototype.showMask;\n/** @type {?} */\nNgxPhoneMaskDirective.prototype.disabled;\n/** @type {?} */\nNgxPhoneMaskDirective.prototype._value;\n/** @type {?} */\nNgxPhoneMaskDirective.prototype.oldValue;\n/** @type {?} */\nNgxPhoneMaskDirective.prototype.input;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":[],"mappings":"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"}